#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        shift_left_minus: shift_left_minus {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_LEFT_MINUS";
            bindings = <&kp LEFT>, <&kp MINUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        shift_down_plus: shift_down_plus {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_DOWN_PLUS";
            bindings = <&kp DOWN>, <&kp PLUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        shift_up_lbrc: shift_up_lbrc {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_UP_LBRC";
            bindings = <&kp UP>, <&kp LEFT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        shift_right_rbrc: shift_right_rbrc {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_RIGHT_RBRC";
            bindings = <&kp RIGHT>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        backslash_no_shift: backslash_no_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSLASH_NO_SHIFT";
            bindings = <&kp BACKSLASH>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE  &kp N1     &kp N2    &kp N3     &kp N4      &kp N5  &trans                                                    &mo 2      &kp N6  &kp N7         &kp N8      &kp N9    &kp N0    &kp BACKSPACE
&kp TAB     &kp Q      &kp W     &kp E      &kp R       &kp T   &none                                                     &none      &kp Y   &kp U          &kp I       &kp O     &kp P     &kp BSLH
&kp ESC     &kp A      &kp S     &kp D      &kp F       &kp G   &none      &mo 4  &none         &none     &kp LCTRL       &none      &kp H   &kp J          &kp K       &kp L     &kp SEMI  &kp SQT
&kp LCTRL   &kp Z      &kp X     &kp C      &kp V       &kp B                     &none         &none                                &kp N   &kp M          &kp COMMA   &kp DOT   &kp FSLH  &kp RSHFT
&mo 1       &kp GRAVE  &kp CAPS  &kp CARET  &kp DELETE          &kp SPACE  &mo 3  &kp LCMD      &kp RALT  &kp LEFT_SHIFT  &kp ENTER          &kp BACKSPACE  &kp DOLLAR  &kp LBKT  &kp RBKT  &mo 1
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &trans                                      &mo 2   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        characters {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans             &trans            &trans          &trans             &trans               &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &trans                                      &trans  &kp N6             &kp N7            &kp N8          &kp N9             &kp N0               &trans
&trans  &trans  &trans  &trans  &none   &none   &trans  &trans  &trans      &trans  &trans  &trans  &shift_left_minus  &shift_down_plus  &shift_up_lbrc  &shift_right_rbrc  &backslash_no_shift  &kp LS(PIPE)
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &kp LS(UNDER)      &kp KP_EQUAL      &kp LBKT        &kp RBKT           &kp LS(QMARK)        &kp LS(TILDE)
&trans  &trans  &trans  &trans  &trans          &none   &trans  &trans      &trans  &trans  &trans                     &trans            &kp LS(LBRC)    &kp LS(RBRC)       &trans               &trans
            >;
        };

        window_management {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans            &trans            &trans          &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans            &trans            &trans          &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp RA(LC(LEFT))  &kp RA(LC(DOWN))  &kp RA(LC(UP))  &kp RA(LC(RIGHT))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans            &trans            &trans          &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                    &trans            &trans          &trans             &trans  &trans
            >;
        };
    };
};
